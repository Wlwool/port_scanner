from config import Config
from database.db import create_database, save_report
from src.port_scanner import PortScanner


def get_scan_mode():
    """–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nüéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (–≤—Å–µ –ø–æ—Ä—Ç—ã)")
    print("2. –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤")
    print("3. –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –ø–æ—Ä—Ç–æ–≤")
    print("4. –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–æ—Ä–æ—à–æ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤ (1-1024)")

    while True:
        try:
            choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
            if choice in ["1", "2", "3", "4"]:
                return choice
            print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4")
        except KeyboardInterrupt:
            print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            exit(0)


def get_custom_range():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –ø–æ—Ä—Ç–æ–≤"""
    while True:
        try:
            start = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç (1-65535): "))
            end = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—ã–π –ø–æ—Ä—Ç (1-65535): "))

            if 1 <= start <= 65535 and 1 <= end <= 65535 and start <= end:
                return start, end
            else:
                print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ—Ä—Ç–æ–≤")
        except ValueError:
            print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–∞")
        except KeyboardInterrupt:
            print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            exit(0)


def get_scan_settings():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\n‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:")

    # –¢–∞–π–º–∞—É—Ç
    try:
        timeout_input = input(
            f"–¢–∞–π–º–∞—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é {Config.DEFAULT_TIMEOUT}): "
        ).strip()
        timeout = float(timeout_input) if timeout_input else Config.DEFAULT_TIMEOUT
    except ValueError:
        print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∞–π–º–∞—É—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º {Config.DEFAULT_TIMEOUT}")
        timeout = Config.DEFAULT_TIMEOUT
    except KeyboardInterrupt:
        print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        exit(0)

    # –ó–∞–¥–µ—Ä–∂–∫–∞
    try:
        delay_input = input(
            f"–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é {Config.SCAN_DELAY}): "
        ).strip()
        scan_delay = float(delay_input) if delay_input else Config.SCAN_DELAY
    except ValueError:
        print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º {Config.SCAN_DELAY}")
        scan_delay = Config.SCAN_DELAY
    except KeyboardInterrupt:
        print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        exit(0)

    # –î–µ—Ç–∞–ª–∏
    try:
        details_input = (
            input("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è? (y/n, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é y): ")
            .strip()
            .lower()
        )
        show_details = details_input != "n" if details_input else True
    except KeyboardInterrupt:
        print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        exit(0)

    return timeout, scan_delay, show_details


def get_host_input():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ö–æ—Å—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        host = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–∞–π—Ç–∞ –±–µ–∑ http/https –∏–ª–∏ IP-–∞–¥—Ä–µ—Å: ").strip()
        if not host:
            print("‚ùå –•–æ—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
            exit(1)
        return host
    except KeyboardInterrupt:
        print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        exit(0)


def perform_scan(scanner, mode):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
    if mode == "1":
        print(
            f"\nüîç –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ " f"{len(Config.DEFAULT_PORTS)} –ø–æ—Ä—Ç–æ–≤..."
        )
        return scanner.scan_ports()
    elif mode == "2":
        print(
            f"\nüîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ "
            f"{len(Config.get_common_ports())} –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤..."
        )
        return scanner.scan_common_ports()
    elif mode == "3":
        start, end = get_custom_range()
        print(
            f"\nüîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ {start}-{end} ({end - start + 1} –ø–æ—Ä—Ç–æ–≤)..."
        )
        return scanner.scan_port_range(start, end)
    else:  # mode == "4"
        print("\nüîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–æ—Ä–æ—à–æ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤ (1-1024)...")
        return scanner.scan_well_known_ports()


def save_scan_results(report):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    if not report.get("interrupted", False):
        save_report(report)
        print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö {Config.DATABASE_URL}")
    else:
        print(
            f"\n‚ö†Ô∏è  –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ã–ª–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω "
            f"{Config.DATABASE_URL}"
        )


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    print("üöÄ –°–∫–∞–Ω–µ—Ä –ø–æ—Ä—Ç–æ–≤ v2.0")
    print("=" * 50)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    host = get_host_input()
    mode = get_scan_mode()
    timeout, scan_delay, show_details = get_scan_settings()

    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    create_database()

    # –°–∫–∞–Ω–µ—Ä —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    scanner = PortScanner(
        host=host, timeout=timeout, scan_delay=scan_delay, show_details=show_details
    )

    # –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    try:
        report = perform_scan(scanner, mode)
        save_scan_results(report)
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è  –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        exit(0)
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        exit(1)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        exit(0)
